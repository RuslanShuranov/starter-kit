/* Container */
@function breakpoint-min($name, $breakpoints: $breakpoints) {
  $min: map-get($breakpoints, $name);
  @return $min;
}

@mixin breakpoint($name, $breakpoints: $breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  }
}

@mixin container($max-widths: $container-widths, $breakpoints: $breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include breakpoint($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}

/* Columns */
@mixin default() {
  & {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }
}

@mixin offset-col($columns) {
  @for $number from 1 through $columns {
    &-offset-#{$number} {
      margin-left: (100 / $columns * $number)#{'%'};
    }
  }
}

@mixin column($columns) {
  @for $number from 1 through $columns {
    &-#{$number} {
      width: (100 / $columns * $number)#{'%'};
      flex: 0 0 (100 / $columns * $number)#{'%'};
      padding-right: $gutter / 2;
      padding-left: $gutter / 2;
    }
  }
}

@mixin grid-column($breakpoint, $columns) {
  .#{$breakpoint} {
    @include default();
    @include column($columns);
    @include offset-col($columns);
  }
}

@mixin grid-columns($breakpoints, $columns) {
  @each $breakpoint, $width in $breakpoints {
      @media (min-width: $width) {
        @include grid-column($breakpoint, $columns);
    }
  }
}